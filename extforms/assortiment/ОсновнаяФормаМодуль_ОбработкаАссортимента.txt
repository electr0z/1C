Перем глСписокОрганизаций, ТаблицаЗаказа;

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РезультатВыбора = ВыбратьИзСписка(глСписокОрганизаций, Элемент);
	Если РезультатВыбора <> Неопределено Тогда
		Организация = РезультатВыбора.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСписокОрганизаций()
	глСписокОрганизаций = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОрганизацииДопРеквизиты.Организация.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ОрганизацииДопРеквизиты КАК ОрганизацииДопРеквизиты
	|ГДЕ
	|	ОрганизацииДопРеквизиты.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОрганизацииДопРеквизиты.Организация.Наименование";
	
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		глСписокОрганизаций.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

Процедура ОрганизацияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ТекстАвтоПодбора = ПодобратьОрганизациюПоТексту(СтандартнаяОбработка, Текст, );
КонецПроцедуры

Функция ПодобратьОрганизациюПоТексту(СтандартнаяОбработка, Знач Текст, ТолькоАктуальные = Истина, Регистратор = Неопределено)
	ТекстАвтоПодбора = "";
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	
	// заменим спецсимволы
	Текст = СтрЗаменить(Текст, "~", "~~");
	Текст = СтрЗаменить(Текст, "%", "~%");
	Текст = СтрЗаменить(Текст, "_", "~_");
	Текст = СтрЗаменить(Текст, "[", "~[");
	Текст = СтрЗаменить(Текст, "-", "~-");
	Текст = Текст+"%";
	
	Запрос.УстановитьПараметр("Текст", Текст);  
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	Организации.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
	|	И Организации.ПометкаУдаления = ЛОЖЬ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ТекстАвтоПодбора = Выборка.Наименование;
	КонецЕсли;
	
	Возврат ТекстАвтоПодбора;
КонецФункции

Процедура ПриОткрытии()
	ЭлементыФормы.КоманднаяПанель2.Видимость = Ложь;
	Дата = КонецДня(ТекущаяДата());
	ПолучитьСписокОрганизаций();
КонецПроцедуры

Процедура ТабличноеПоле1ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Комментарий.ОтображатьТекст = ЛОЖЬ;
	ОформлениеСтроки.Ячейки.Цена.ОтображатьТекст = ЛОЖЬ;
	
	Если ОформлениеСтроки.ДанныеСтроки.Организация <> NULL Тогда
		ОформлениеСтроки.Ячейки.Номенклатура.ОтображатьТекст = ЛОЖЬ;
		ОформлениеСтроки.Ячейки.НоменклатураРаруса.ОтображатьТекст = ЛОЖЬ;
		ОформлениеСтроки.Ячейки.Фасовка.ОтображатьТекст = ЛОЖЬ;
		ОформлениеСтроки.Ячейки.ЧистыйВес.ОтображатьТекст = ЛОЖЬ;
		ОформлениеСтроки.Ячейки.КоэффПеревода.ОтображатьТекст = ЛОЖЬ;
		ОформлениеСтроки.ДанныеСтроки.КомментарийСУ = ОформлениеСтроки.ДанныеСтроки.Комментарий;
		
	КонецЕсли;
	
	Если ОформлениеСтроки.ДанныеСтроки.ЕстьИзмененияВБудущемПериоде <> NULL Тогда
		ОформлениеСтроки.Ячейки.Поставщик.ОтображатьТекст = ЛОЖЬ;
		ОформлениеСтроки.Ячейки.Выбран.ОтображатьФлажок = ЛОЖЬ;
		Если ОформлениеСтроки.ДанныеСтроки.ЕстьИзмененияВБудущемПериоде Тогда
			ОформлениеСтроки.Ячейки.ЦенаВРесторане.ЦветФона = WebЦвета.СветлоРозовый;
			ОформлениеСтроки.Ячейки.ЦенаЗаШтуку.ЦветФона = WebЦвета.СветлоРозовый;	
		КонецЕсли;
		Если ОформлениеСтроки.ДанныеСтроки.Исключение и Не ЗначениеЗаполнено(Организация) Тогда
			ОформлениеСтроки.Ячейки.Организация.ЦветФона = WebЦвета.СветлоЗеленый;
		КонецЕсли;
	Иначе
		Если ОформлениеСтроки.ДанныеСтроки.Номенклатура = NULL Тогда
			Если Не ОтчетСформированСНоменклатурой Тогда
				ОформлениеСтроки.Ячейки.Поставщик.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.Выбран.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.Организация.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.Номенклатура.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.НоменклатураРаруса.ЦветФона  = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.ЦенаВРесторане.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.ЦенаЗаШтуку.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.Фасовка.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.ЧистыйВес.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.КоэффПеревода.ЦветФона = Новый Цвет(176, 224,230);
				ОформлениеСтроки.Ячейки.КомментарийСУ.ЦветФона = Новый Цвет(176, 224,230);
			КонецЕсли;
			ОформлениеСтроки.Ячейки.Организация.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.Номенклатура.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.НоменклатураРаруса.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.ЦенаВРесторане.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.ЦенаЗаШтуку.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.Фасовка.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.ЧистыйВес.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.КоэффПеревода.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.КомментарийСУ.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.Выбран.ОтображатьФлажок = ЛОЖЬ;			
		Иначе
			ОформлениеСтроки.Ячейки.Поставщик.ОтображатьТекст = ЛОЖЬ;
			ОформлениеСтроки.Ячейки.Выбран.ОтображатьФлажок = Истина;
			ОформлениеСтроки.ДанныеСтроки.ЦенаВРесторане = ОформлениеСтроки.ДанныеСтроки.Цена;
			ОформлениеСтроки.ДанныеСтроки.ЦенаЗаШтуку = ОформлениеСтроки.ДанныеСтроки.ЦенаЗаШтукуСУ;
			Если ОформлениеСтроки.ДанныеСтроки.ЕстьИзмененияВБудущемПериодеСУ Тогда
				ОформлениеСтроки.Ячейки.ЦенаВРесторане.ЦветФона = WebЦвета.СветлоРозовый;
				ОформлениеСтроки.Ячейки.ЦенаЗаШтуку.ЦветФона = WebЦвета.СветлоРозовый;	
			КонецЕсли;
			Если ОформлениеСтроки.ДанныеСтроки.ИсключениеСУ и Не ЗначениеЗаполнено(Организация) Тогда
				ОформлениеСтроки.Ячейки.Организация.ЦветФона = WebЦвета.СветлоЗеленый;
			КонецЕсли;
			
			
		КонецЕсли;
		
		ОформлениеСтроки.Ячейки.Выбран.ОтображатьТекст = ЛОЖЬ;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПоле1Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя = "ЦенаВРесторане" Или Колонка.Имя = "ЦенаЗаШтуку" или Колонка.Имя = "Организация" Тогда
		Если Элемент.ТекущиеДанные.Организация <> NULL Тогда
			СтруктураПоискаВТаблице = Новый Структура;
			СтруктураПоискаВТаблице.Вставить("Поставщик", Элемент.ТекущиеДанные.Поставщик);
			СтруктураПоискаВТаблице.Вставить("НоменклатураПоставщика", Элемент.ТекущиеДанные.Номенклатура);
			СтруктураПоискаВТаблице.Вставить("НоменклатураРаруса", Элемент.ТекущиеДанные.НоменклатураРаруса);
			СтруктураПоискаВТаблице.Вставить("Организация", Элемент.ТекущиеДанные.Организация);
			
			МассивСтрок = тЦен.НайтиСтроки(СтруктураПоискаВТаблице);
			Форма = ПолучитьФорму("Форма",ВладелецФормы, КлючУникальности);
			Форма.МассивСтрок = МассивСтрок;
			Форма.Открыть();
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПоле1ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	Отказ = Истина;
КонецПроцедуры

Процедура ТабличноеПоле1ПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура КоманднаяПанель2СформироватьЗаказ(Кнопка)
	Ответ = Вопрос("Сформировать заказ по выбранным строкам ?", РежимДиалогаВопрос.ДаНет, 60);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если Не ЗначениеЗаполнено(Организация) Тогда
			ОрганизацияДляФормирования = Справочники.Организации.ПустаяСсылка();
			ВвестиЗначение(ОрганизацияДляФормирования,"Не указана организация, формирования заказа, укажите организацию!", Тип("СправочникСсылка.Организации"));
			Если ОрганизацияДляФормирования = Справочники.Организации.ПустаяСсылка() Тогда
				Перейти ~Выход;
			КонецЕсли;
		Иначе
			ОрганизацияДляФормирования = Организация;
		КонецЕсли;
		ТаблицаЗаказа = ТаблицаЗаказа();
		ВыбранныеСтроки = ТабличноеПоле1.Строки.НайтиСтроки(Новый Структура("Выбран", Истина), Истина);
		СписокГруппТовара = Новый СписокЗначений;
		Для Каждого стр из ВыбранныеСтроки Цикл
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Организация", ОрганизацияДляФормирования);
			СтруктураПоиска.Вставить("Поставщик", стр.Поставщик);
			СтруктураПоиска.Вставить("Номенклатура", стр.Номенклатура);
			СтруктураПоиска.Вставить("НоменклатураРаруса", стр.НоменклатураРаруса);
			
			СтрокиОрганизаций = ТабличноеПоле1.Строки.НайтиСтроки(СтруктураПоиска, Истина);
			Если СтрокиОрганизаций.Количество() > 0 Тогда
				Для Каждого строка Из СтрокиОрганизаций Цикл
					Если строка.ГруппаЗаказа <> NULL Тогда
						
						ИскомоеЗначение = СписокГруппТовара.НайтиПоЗначению(строка.ГруппаЗаказа);
						Если ИскомоеЗначение = Неопределено Тогда
							СписокГруппТовара.Добавить(строка.ГруппаЗаказа);
						КонецЕсли;
					КонецЕсли;
					//СтрокаТаблицы = ТаблицаЗаказа.Добавить();
					//СтрокаТаблицы.НоменклатураПостащика = строка.Номенклатура;
					//СтрокаТаблицы.Поставщик = строка.Поставщик;
					//СтрокаТаблицы.Группасырья = строка.НоменклатураРаруса;
					//СтрокаТаблицы.Цена = строка.ЦенаВРесторане;
					//СтрокаТаблицы.ГруппаЗаказа = строка.ГруппаЗаказа;
					//СтрокаТаблицы.ДаНет = "Да";
				КонецЦикла;
			Иначе
				Если стр.ГруппаЗаказа <> NULL Тогда
					ИскомоеЗначение = СписокГруппТовара.НайтиПоЗначению(стр.ГруппаЗаказа);
					Если ИскомоеЗначение = Неопределено Тогда
						СписокГруппТовара.Добавить(стр.ГруппаЗаказа);
					КонецЕсли;
				КонецЕсли;
				//СтрокаТаблицы = ТаблицаЗаказа.Добавить();
				//СтрокаТаблицы.НоменклатураПостащика = стр.Номенклатура;
				//СтрокаТаблицы.Поставщик = стр.Поставщик;
				//СтрокаТаблицы.Группасырья = стр.НоменклатураРаруса;
				//СтрокаТаблицы.Цена = стр.ЦенаВРесторане;
				//СтрокаТаблицы.ГруппаЗаказа = стр.ГруппаЗаказа;
				//СтрокаТаблицы.ДаНет = "Да";
			КонецЕсли;
		КонецЦикла;
		
		Если СписокГруппТовара.Количество() > 0 Тогда	
			СформироватьЗаказ(ОрганизацияДляФормирования,Дата,"ПоГруппам",СписокГруппТовара);
			
			Попытка	
				Рез = ТоматоСистемаЗаказаСервер.СформироватьДокументЗаказа(Дата ,ОрганизацияДляФормирования,ТаблицаЗаказа,,Ложь,Истина);
				Сообщить(Рез);
				ЖурналЗаказов = Документы.ЗаказТоваров.ПолучитьФормуСписка("ФормаСписка");
				ЖурналЗаказов.Открыть();	
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	~Выход:
КонецПроцедуры

Процедура СформироватьЗаказ(пОбъект,пДата,ВидЗаказа,ГруппыЗаказа)
	ТребуетсяОбновитьЗаказ = Ложь;
	ТаблицаЗаказа.Очистить();	
	
	//Индикатор выполнения
	ФормаИндикатора = ПолучитьОбщуюФорму("Индикация");
	ФормаИндикатора.Заголовок = "Формирование заказа";
	ФормаИндикатора.СтрокаСостояния = "Обработка данных для заказа...";
	ФормаИндикатора.ВладелецФормы = ЭтаФорма;
	ФормаИндикатора.Открыть();
	КоличествоЗаписей = 100;
	
	пРегион = Томато.ПолучитьРегион(пОбъект);
	Результат = ТоматоСистемаЗаказаСервер.ПолучитьДанныеПоСырьюДляФормированияЗаказа(пРегион,пОбъект,пДата,ВидЗаказа,ГруппыЗаказа);
	
	
	КоличествоЗаписей = Результат.Количество();
	ФормаИндикатора.ЭлементыФормы.Индикатор.МаксимальноеЗначение=КоличествоЗаписей;
	ФормаИндикатора.ЭлементыФормы.Индикатор.Шаг=КоличествоЗаписей/100;
	
	Если Результат.Количество() > 0 Тогда
		Инд = 0;
		
		СтраховыеДни = Томато.ПолучитьНастройкиСистемыЗаказаКолвоСтраховыхДней();
		ПодразделениеКомпании = Справочники.ПодразделенияКомпании.НайтиПоРеквизиту("Организация",пОбъект);
		Для Каждого Строка Из Результат Цикл   		
			Инд = Инд + 1;				
			ФормаИндикатора.ЭлементыФормы.Индикатор.Значение=Инд;					
			
			ТоматоСистемаЗаказаСервер.ЗаполнитьСтрокуТаблицуЗаказа(ТаблицаЗаказа, 
			Строка, 
			пДата, 
			ВидЗаказа, 
			пОбъект, 
			ПодразделениеКомпании, 
			пРегион, 
			СтраховыеДни);
			
			СтрокиПоиска = ТабличноеПоле1.Строки.НайтиСтроки(Новый Структура("Выбран, Поставщик, Номенклатура", Истина, Строка.ГруппаЗаказа.Контрагент, Строка.Номенклатура), Истина);
			Если СтрокиПоиска.Количество() = 0 Тогда
				ТаблицаЗаказа[Инд - 1].ДаНет = "Нет";
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	СтрокиПоиска = ТабличноеПоле1.Строки.НайтиСтроки(Новый Структура("Выбран", Истина), Истина);
	Для Каждого строкаИзПоиска из СтрокиПоиска Цикл
		ВнутренниеСтроки = ТабличноеПоле1.Строки.НайтиСтроки(Новый Структура("Поставщик,Номенклатура, Организация, ГруппаЗаказа",строкаИзПоиска.Поставщик, строкаИзПоиска.Номенклатура, пОбъект, Справочники.ГруппыЗаказов.ПустаяСсылка()), Истина);
		Для Каждого строкаВнутреннейСтроки Из ВнутренниеСтроки Цикл
			ТребуетсяОбновитьЗаказ = Истина;
			СтрокаТаблицыЗаказа = ТаблицаЗаказа.Добавить();
			СтрокаТаблицыЗаказа.ДаНет = "Да";
			СтрокаТаблицыЗаказа.Поставщик = строкаВнутреннейСтроки.Поставщик;
			СтрокаТаблицыЗаказа.НоменклатураПостащика = строкаВнутреннейСтроки.Номенклатура;
			СтрокаТаблицыЗаказа.Цена = строкаВнутреннейСтроки.ЦенаЗаШтукуСУ;
			СтрокаТаблицыЗаказа.ДатаПрихода = КонецДня(Дата)+1;

		КонецЦикла;
	КонецЦикла;
	
	Если ТребуетсяОбновитьЗаказ Тогда
		Сообщить("В заказе есть позиции без группы поставщика, необходимо нажать кнопку ""Обновить заказ""!", СтатусСообщения.Внимание);
	КонецЕсли;
	
	Если ФормаИндикатора.Открыта() Тогда
		ФормаИндикатора.Закрыть();
	КонецЕсли;
	
КонецПроцедуры


Функция ТаблицаЗаказа()
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ДаНет", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	Таблица.Колонки.Добавить("ГруппаЗаказа", Новый ОписаниеТипов("СправочникСсылка.ГруппыЗаказов"));
	Таблица.Колонки.Добавить("НоменклатураПостащика", Новый ОписаниеТипов("СправочникСсылка.НоменклатураПоставщиков"));
	Таблица.Колонки.Добавить("ЕдИзм", Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
	Таблица.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Остаток", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 2)));
	Таблица.Колонки.Добавить("ТоварыВПути", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 2)));
	Таблица.Колонки.Добавить("ТоварВПутиКОстатку", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 2)));
	Таблица.Колонки.Добавить("НеобходимоДоПоставки", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	Таблица.Колонки.Добавить("Оборачиваемость", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("КолвоЗаказа", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	Таблица.Колонки.Добавить("ЗаказПоставщику", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(13, 3)));
	Таблица.Колонки.Добавить("ЗаказПоставщикуУпаковки", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10)));
	Таблица.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ДатаПрихода", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("СледующаяПоставка", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ПериодЗаказа", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10)));
	Таблица.Колонки.Добавить("СредняяУходимость", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 7)));
	Таблица.Колонки.Добавить("ПериодОтЗаказаДоСледующейПоставки", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10)));
	Таблица.Колонки.Добавить("ТоварВПутиДатаПрихода", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Группасырья", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("ОборачиваемостьСУчетомЗаказа", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 2)));
	Таблица.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10)));
	Таблица.Колонки.Добавить("ОстатокКолво", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	Таблица.Колонки.Добавить("Заказ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 2)));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 2)));
	Таблица.Колонки.Добавить("ЛимитПоставщика", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СредняяУходимостьВЕдИзмПоставщика", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 7)));
	Таблица.Колонки.Добавить("ОстатокВЕдИзмПоставщика", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Процедура ПраздничныйГрафикПриИзменении(Элемент)
	Константы.ТоматоИспользоватьПраздничныйГрафик.Установить(ПраздничныйГрафик);
КонецПроцедуры

Процедура НоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Номенклатура = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбора",,ЭтаФорма);
КонецПроцедуры


Функция ПодобратьНоменклатураПоТексту(СтандартнаяОбработка, Знач Текст, ТолькоАктуальные = Истина, Регистратор = Неопределено)
	ТекстАвтоПодбора = "";
    СтандартнаяОбработка = Ложь;
    
    Запрос = Новый Запрос;
        
    // заменим спецсимволы
    Текст = СтрЗаменить(Текст, "~", "~~");
    Текст = СтрЗаменить(Текст, "%", "~%");
    Текст = СтрЗаменить(Текст, "_", "~_");
    Текст = СтрЗаменить(Текст, "[", "~[");
    Текст = СтрЗаменить(Текст, "-", "~-");
    Текст = Текст+"%";
    
    Запрос.УстановитьПараметр("Текст", Текст);  
    Запрос.Текст =
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Ссылка
    |ИЗ
    |	Справочник.Номенклатура КАК Номенклатура
    |ГДЕ
    |	Номенклатура.Наименование ПОДОБНО &Текст СПЕЦСИМВОЛ ""~""
    |	И Номенклатура.ПометкаУдаления = ЛОЖЬ
    |	И Номенклатура.Наименование ПОДОБНО ""%(т)""";
            
    Выборка = Запрос.Выполнить().Выбрать();
	
	//Если Выборка.Количество() = 1 Тогда
	//	Выборка.Следующий();
	//	ТекстАвтоПодбора = Выборка.Наименование;
	//Иначе
		СписокЗначений = Новый СписокЗначений;
		Пока  Выборка.Следующий() Цикл
			СписокЗначений.Добавить(Выборка.Ссылка);
		КонецЦикла;
		Возврат СписокЗначений;
	//КонецЕсли;

	//Возврат ТекстАвтоПодбора;
КонецФункции

Процедура НоменклатураАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ЭлементыФормы.Номенклатура.СписокВыбора = ПодобратьНоменклатураПоТексту(СтандартнаяОбработка, Текст);
КонецПроцедуры

Процедура НоменклатураОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	 Значение = ПодобратьНоменклатураПоТексту(СтандартнаяОбработка, Текст);
КонецПроцедуры

Процедура НоменклатураНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
КонецПроцедуры

Процедура НоменклатураПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Номенклатура = ВыбранноеЗначение;
КонецПроцедуры

Процедура СформироватьНажатие(Элемент)
		//Индикатор выполнения
	ФормаИндикатора = ПолучитьОбщуюФорму("Индикация");
	ФормаИндикатора.Заголовок = "Формирование отчета";
	ФормаИндикатора.СтрокаСостояния = "Сбор начальных данных...";
	ФормаИндикатора.Открыть();
	МаксимальноеЗначениеИндикатора = 100;
	ФормаИндикатора.ЭлементыФормы.Индикатор.МаксимальноеЗначение=МаксимальноеЗначениеИндикатора; //25 оставляем на остальные процедуры
	
	ФормаИндикатора.ЭлементыФормы.Индикатор.Шаг=МаксимальноеЗначениеИндикатора/100;
	ФормаИндикатора.СтрокаСостояния = "Сбор данных по ценам...";
	ФормаИндикатора.ЭлементыФормы.Индикатор.Значение = 25;
	Если Не ЗначениеЗаполнено(тЦен) Тогда
		тЦен = ТаблицаВсехЦены();
	КонецЕсли;
	ФормаИндикатора.ЭлементыФормы.Индикатор.Значение = 50;
	ЭлементыФормы.ТабличноеПоле1.Значение = ТаблицаЦеныДляТЧ();  //Заполняется табличное поле организаций
	ФормаИндикатора.ЭлементыФормы.Индикатор.Значение = 90;
	ФормаИндикатора.ЭлементыФормы.Индикатор.Значение = 100;
	Если ФормаИндикатора.Открыта() Тогда  
		ФормаИндикатора.Закрыть();        //Закрываем форму индикатора
	КонецЕсли;
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ОтчетСформированСНоменклатурой = Истина;
	Иначе
		ОтчетСформированСНоменклатурой = Ложь;
	КонецЕсли;
КонецПроцедуры



